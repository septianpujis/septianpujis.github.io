# Firebase Firestore Security Rules
# Copy and paste these rules into your Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow anyone to read and write RSVP responses
    // This is suitable for a wedding invitation where guests need to submit RSVPs
    match /rsvp_responses/{document} {
      allow read, write: if true;
    }
    
    // Allow anyone to read and write sweet messages
    // Guests can leave messages for the couple
    match /sweet_messages/{document} {
      allow read, write: if true;
    }
    
    // Optional: User management (if you want to add authentication later)
    match /users/{userId} {
      // Allow users to read/write their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow public read access to user profiles (optional)
      allow read: if true;
    }
    
    // Optional: Admin collection for managing the wedding
    match /admin/{document} {
      // Only allow authenticated admin users (you can set this up later)
      allow read, write: if false; // Change to true when you add admin authentication
    }
  }
}

# Alternative: More restrictive rules (uncomment if you want more security)
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rate limiting: Allow max 5 submissions per IP per hour
    match /rsvp_responses/{document} {
      allow create: if request.time > resource.data.created_at + duration.value(1, 'h') 
                   && getCountFromTime('rsvp_responses', request.time, duration.value(1, 'h')) < 5;
      allow read: if true;
      allow update, delete: if false; // No updates or deletions
    }
    
    match /sweet_messages/{document} {
      allow create: if request.time > resource.data.created_at + duration.value(1, 'h')
                   && getCountFromTime('sweet_messages', request.time, duration.value(1, 'h')) < 3;
      allow read: if true;
      allow update, delete: if false;
    }
    
    // Helper function for rate limiting (you'll need to implement this)
    function getCountFromTime(collection, time, duration) {
      return getAfter(collection, time - duration).size();
    }
  }
}
*/

# Note: The first set of rules (above) is recommended for testing
# The second set (commented) is more secure but requires additional setup
